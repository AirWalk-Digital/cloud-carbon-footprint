import { BaseQuestion, Choices, Default, Message, When } from './base';
export interface CheckboxQuestion extends BaseQuestion {
    type: 'checkbox';
    choices: Choices<{
        name: string;
        value?: any;
        checked?: boolean;
        disabled?: any;
    }>;
    filter?: (answer: any) => any | Promise<any>;
    validate?: (answer: any) => boolean | Promise<boolean> | string | Promise<string>;
    default?: Default<Array<any>>;
    pageSize?: number;
}
export declare function checkbox(name: string, message: Message, choices: Choices<{
    name: string;
    value?: any;
    checked?: boolean;
    disabled?: any;
}>, options?: {
    when?: When;
    filter?: (answer: any) => any | Promise<any>;
    validate?: (answer: any) => boolean | Promise<boolean> | string | Promise<string>;
    default?: Default<Array<any>>;
    pageSize?: number;
}): CheckboxQuestion;
